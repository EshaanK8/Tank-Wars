Program Structure:
START METHOD--> STARTS THE START THREAD--> CALLS RUN METHOD--> CALLS INIT METHOD--> CALLS DISPLAY METHOD 



main.game package:

-Launcher Class (main class)
   Notes:
    - Contains the main method
    - Launches the game
   
   
-Game Class

   Attributes:
      public int width, height; //dimension attributes
      public String title; //title attribute
      private boolean running = false; //Used for while loop to allow game to run
  
  Constructor:
      public Game(String title, int width, int height)
      
  Notes:
    - This is essentially the class that contains the main game
    - Calls the display class to display the game
    - Contains the main framework of the game, such as the tick, render and run methods


main.display package:

- Display Class
  
   Attributes:
      private JFrame frame; //window
      private Canvas canvas; //allows for graphics
      private String title; //window title
      private int width, height;//window dimensions 
      
   Constructor:
      public Display(String title, int width, int height)
      
   Notes:
    - This class creates a JFrame and a canvas to display graphics on the game


main.game.gfx package:

- ImageLoader Class
   Notes:
   - Used to import and draw images to the screen
   - Uses "return ImageIO.read(ImageLoader.class.getResource(path));" to return the buffered image object of the loaded image
   
- SpriteSheet Class
   Notes:
   -A simple class used to crop spritesheets so that their individual sprites can be shown
   
- Assets Class
   Notes:
   - Used to store assets and crop specific images from the spritesheet and assign them to Buffered Images so they can be easily called
